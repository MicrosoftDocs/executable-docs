apiVersion: v1
kind: ConfigMap
metadata:
  name: magic8ball-configmap
data:
  TITLE: "Magic 8 Ball"
  LABEL: "Pose your question and cross your fingers!"
  TEMPERATURE: "0.9"
  IMAGE_WIDTH: "80"
  AZURE_OPENAI_TYPE: azure_ad
  AZURE_OPENAI_BASE: https://myopenai.openai.azure.com/
  AZURE_OPENAI_MODEL: gpt-4o-mini
  AZURE_OPENAI_DEPLOYMENT: gpt-4o-mini
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: magic8ball
  labels:
    app.kubernetes.io/name: magic8ball
    azure.workload.identity/use: "true"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: magic8ball
  template:
    metadata:
      labels:
        app.kubernetes.io/name: magic8ball
    spec:
      serviceAccountName: magic8ball-sa
      containers:
      - name: magic8ball
        image: $IMAGE
        ports:
        - containerPort: 8501
        envFrom:
        - configMapRef: 
            name: magic8ball-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: magic8ball
spec:
  selector:
    app.kubernetes.io/name: magic8ball
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8501
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: magic8ball-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dev
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - magic8ball.contoso.com
    secretName: tls-secret
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: magic8ball
            port:
              number: 80
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-dev
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: $EMAIL
    privateKeySecretRef:
      name: tls-secret
    solvers:
    - http01:
        ingress:
          ingressClassName: nginx
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: magic8ball-sa
  annotations:
    azure.workload.identity/client-id: $WORKLOAD_IDENTITY_CLIENT_ID